{"ast":null,"code":"var _jsxFileName = \"C:\\\\Shekhar\\\\web-dailigo\\\\frontend\\\\src\\\\components\\\\Subscription.js\",\n  _s = $RefreshSig$();\n// frontend/src/components/Subscription.js\nimport React, { useEffect, useState } from 'react';\nimport { getSubscriptions, createSubscription } from '../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Subscription = ({\n  userId\n}) => {\n  _s();\n  const [subscriptions, setSubscriptions] = useState([]);\n  const [planId, setPlanId] = useState('');\n  useEffect(() => {\n    const fetchSubscriptions = async () => {\n      const response = await getSubscriptions();\n      setSubscriptions(response.data);\n    };\n    fetchSubscriptions();\n  }, []);\n  const handleCreateSubscription = async () => {\n    await createSubscription(userId, planId);\n    setPlanId('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Subscriptions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: subscriptions.map(sub => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: `Plan ID: ${sub.planId}`\n      }, sub.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: planId,\n      onChange: e => setPlanId(e.target.value),\n      placeholder: \"Enter Plan ID\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleCreateSubscription,\n      children: \"Create Subscription\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n};\n_s(Subscription, \"h/RE/6LFLCIx9PDKB4oD3htsFsQ=\");\n_c = Subscription;\nexport default Subscription;\nvar _c;\n$RefreshReg$(_c, \"Subscription\");","map":{"version":3,"names":["React","useEffect","useState","getSubscriptions","createSubscription","jsxDEV","_jsxDEV","Subscription","userId","_s","subscriptions","setSubscriptions","planId","setPlanId","fetchSubscriptions","response","data","handleCreateSubscription","children","fileName","_jsxFileName","lineNumber","columnNumber","map","sub","id","type","value","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/Shekhar/web-dailigo/frontend/src/components/Subscription.js"],"sourcesContent":["// frontend/src/components/Subscription.js\r\nimport React, { useEffect, useState } from 'react';\r\nimport { getSubscriptions, createSubscription } from '../api';\r\n\r\nconst Subscription = ({ userId }) => {\r\n    const [subscriptions, setSubscriptions] = useState([]);\r\n    const [planId, setPlanId] = useState('');\r\n\r\n    useEffect(() => {\r\n        const fetchSubscriptions = async () => {\r\n            const response = await getSubscriptions();\r\n            setSubscriptions(response.data);\r\n        };\r\n        fetchSubscriptions();\r\n    }, []);\r\n\r\n    const handleCreateSubscription = async () => {\r\n        await createSubscription(userId, planId);\r\n        setPlanId('');\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h1>Subscriptions</h1>\r\n            <ul>\r\n                {subscriptions.map((sub) => (\r\n                    <li key={sub.id}>{`Plan ID: ${sub.planId}`}</li>\r\n                ))}\r\n            </ul>\r\n            <input\r\n                type=\"text\"\r\n                value={planId}\r\n                onChange={(e) => setPlanId(e.target.value)}\r\n                placeholder=\"Enter Plan ID\"\r\n            />\r\n            <button onClick={handleCreateSubscription}>Create Subscription</button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Subscription;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,gBAAgB,EAAEC,kBAAkB,QAAQ,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9D,MAAMC,YAAY,GAAGA,CAAC;EAAEC;AAAO,CAAC,KAAK;EAAAC,EAAA;EACjC,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACU,MAAM,EAAEC,SAAS,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAExCD,SAAS,CAAC,MAAM;IACZ,MAAMa,kBAAkB,GAAG,MAAAA,CAAA,KAAY;MACnC,MAAMC,QAAQ,GAAG,MAAMZ,gBAAgB,CAAC,CAAC;MACzCQ,gBAAgB,CAACI,QAAQ,CAACC,IAAI,CAAC;IACnC,CAAC;IACDF,kBAAkB,CAAC,CAAC;EACxB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMG,wBAAwB,GAAG,MAAAA,CAAA,KAAY;IACzC,MAAMb,kBAAkB,CAACI,MAAM,EAAEI,MAAM,CAAC;IACxCC,SAAS,CAAC,EAAE,CAAC;EACjB,CAAC;EAED,oBACIP,OAAA;IAAAY,QAAA,gBACIZ,OAAA;MAAAY,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtBhB,OAAA;MAAAY,QAAA,EACKR,aAAa,CAACa,GAAG,CAAEC,GAAG,iBACnBlB,OAAA;QAAAY,QAAA,EAAkB,YAAYM,GAAG,CAACZ,MAAM;MAAE,GAAjCY,GAAG,CAACC,EAAE;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAgC,CAClD;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC,eACLhB,OAAA;MACIoB,IAAI,EAAC,MAAM;MACXC,KAAK,EAAEf,MAAO;MACdgB,QAAQ,EAAGC,CAAC,IAAKhB,SAAS,CAACgB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAC3CI,WAAW,EAAC;IAAe;MAAAZ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9B,CAAC,eACFhB,OAAA;MAAQ0B,OAAO,EAAEf,wBAAyB;MAAAC,QAAA,EAAC;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtE,CAAC;AAEd,CAAC;AAACb,EAAA,CAlCIF,YAAY;AAAA0B,EAAA,GAAZ1B,YAAY;AAoClB,eAAeA,YAAY;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}